#!/usr/bin/env node

const argv = require('minimist')(process.argv.slice(2), {
  string: ['format'],
  alias: { h: 'help' }
})
const { pgnToActisenseSerialFormat, pgnToActisenseN2KAsciiFormat, pgnToiKonvertSerialFormat, pgnToYdgwRawFormat, pgnToPCDIN, pgnToMXPGN } = require('../index')
const { toActisenseSerialFormat } = require('../lib/stringMsg')

if ( argv['help'] ) {
  console.error(`Usage: ${process.argv[0]} [options]

Options:
  --format <format>   actisense, actisensen2kascii, ikconvert, ydgw, pcdin, mxpgn
  -h, --help          output usage information`)
  process.exit(1)
}


const formatters = {
  actisense: pgnToActisenseSerialFormat,
  'n2kascii': pgnToActisenseN2KAsciiFormat,
  ikconvert: pgnToiKonvertSerialFormat,
  ydgw: pgnToYdgwRawFormat,
  'pcdin': pgnToPCDIN,
  'mxpgn': pgnToMXPGN
}

const format = argv['format'] || 'actisense'
const formatter = formatters[format]
if ( !formatter ) {
  console.error(`unknown format: ${argv['format']}`)
  process.exit(1)
}
                             

var readline = require('readline')
var rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout,
  terminal: false
})

var input = []
rl.on('line', function (line) {
  var msg = JSON.parse(line)
  const res = formatter(msg)
  if ( Array.isArray(res) ) {
    res.forEach(m => {
      console.log(m)
    })
  } else {
    console.log(res)
  }
  //console.log(pgnToActisenseSerialFormat(msg))
  //console.log(pgnToiKonvertSerialFormat(pgn))
  //console.log(pgnToYdgwRawFormat(msg))
})
